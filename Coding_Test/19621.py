# (오후) 10:10 ~ 11:10 (0707)
# (오후) 12:20 ~ 2:20, 3:40 ~ 4:10 (0708)

# dp
n = int(input())
temp = []

for _ in range(n):
    # 시작 시간, 끝나는 시간, 회의 인원
    a, b, c = map(int, input().split()) 
    temp.append([a, b, c])

# dp 테이블
dp = [0] * (n+1)

for i in range(1, n+1):

    # 1. dp[i-1] - 이전 회의 선택하는 경우, 
    # 2. dp[i-2] + temp[i-1][2] 
    #   - 이전 회의를 선택하지 않는 경우,
    #     현재 i번째 회의 선택 후, 
    #     이전 회의 겹치지 않는 경우의 최대 회의 인원에 현재 회의 인원 더함.
    dp[i] = max(dp[i-1], dp[i-2] + temp[i-1][2]) # c끼리만 비교
    # print('temp = ', dp[i-1], dp[i-2] + temp[i-1][2], dp[i])   

    """
    예시 코드 기준 (각 i 값을 1~6번이라 가정. c값만 더해짐)
    - 1번은 당연히 dp[i-1]보다 큼. dp[i]에 추가
    - 2번은 [0] + [2] = 60인데, 80보다 작음. 그대로 배열 유지
    - 3번은 [1] + [3] = 150임. 80보다 크기에 배열 값 갱신
    - 4번은 [1] + [4] = 180임. 배열 값 갱신 
        (의문: 인덱스 2, 3과만 비교하는 거 아닌가? 
            왜 [1]이 들어오지 (=> bottom-up이라))
    - 5번은 [1] + [3] + [5] = 190임. 배열 값 갱신 (3)
    - 6번은 [1] + [4] + [6] = 230임. 배열 값 갱신 최종 출력 (4)

    dp[i-1] - 이전 회의를 선택한 경우의 최대 인원 (이해 함)
    dp[i-2] + temp[i-1][2] - 이전 이전 회의까지의 최대 회의 인원에 
                             현재 회의 인원 더함 
    """
    
print(dp[n])